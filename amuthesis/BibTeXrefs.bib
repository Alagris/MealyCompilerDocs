@string{jgr = "References"}
@inproceedings{roark-etal-2011-lexicographic,
    title = "Lexicographic Semirings for Exact Automata Encoding of Sequence Models",
    author = "Roark, Brian  and
      Sproat, Richard  and
      Shafran, Izhak",
    booktitle = "Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies",
    month = jun,
    year = "2011",
    address = "Portland, Oregon, USA",
    publisher = "Association for Computational Linguistics",
    url = "https://www.aclweb.org/anthology/P11-2001",
    pages = "1--5",
}
@InProceedings{Marie-Pierre,
author="B{\'e}al, Marie-Pierre
and Carton, Olivier
and Prieur, Christophe
and Sakarovitch, Jacques",
editor="Gonnet, Gaston H.
and Viola, Alfredo",
title="Squaring Transducers: An Efficient Procedure for Deciding Functionality and Sequentiality of Transducers",
booktitle="LATIN 2000: Theoretical Informatics",
year="2000",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="397--406",
abstract="We described here a construction on transducers that give a new conceptual proof for two classical decidability results on transducers: it is decidable whether a finite transducer realizes a functional relation, and whether a finite transducer realizes a sequential relation. A better complexity follows then for the two decision procedures.",
isbn="978-3-540-46415-0"
}
@inproceedings{webassembly_speed3,
	author = {Haas, Andreas and Rossberg, Andreas and Schuff, Derek L. and Titzer, Ben L. and Holman, Michael and Gohman, Dan and Wagner, Luke and Zakai, Alon and Bastien, JF},
	title = {Bringing the Web up to Speed with WebAssembly},
	year = {2017},
	isbn = {9781450349888},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/3062341.3062363},
	doi = {10.1145/3062341.3062363},
	abstract = { The maturation of the Web platform has given rise to sophisticated and demanding Web applications such as interactive 3D visualization, audio and video software, and games. With that, efficiency and security of code on the Web has become more important than ever. Yet JavaScript as the only built-in language of the Web is not well-equipped to meet these requirements, especially as a compilation target.  Engineers from the four major browser vendors have risen to the challenge and collaboratively designed a portable low-level bytecode called WebAssembly. It offers compact representation, efficient validation and compilation, and safe low to no-overhead execution. Rather than committing to a specific programming model, WebAssembly is an abstraction over modern hardware, making it language-, hardware-, and platform-independent, with use cases beyond just the Web. WebAssembly has been designed with a formal semantics from the start. We describe the motivation, design and formal semantics of WebAssembly and provide some preliminary experience with implementations. },
	booktitle = {Proceedings of the 38th ACM SIGPLAN Conference on Programming Language Design and Implementation},
	pages = {185–200},
	numpages = {16},
	keywords = {virtual machines, type systems, assembly languages, just-in-time compilers, programming languages},
	location = {Barcelona, Spain},
	series = {PLDI 2017}
}
@book{bootstrap,
	title={Bootstrap: Responsive Web Development},
	author={Spurlock, J.},
	isbn={9781449344603},
	url={https://books.google.pl/books?id=LZm7Cxgi3aQC},
	year={2013},
	publisher={O'Reilly Media}
}

@article{syntax_highlighter, title={Syntax highlighting as an influencing factor when reading and comprehending source code}, volume={9}, url={https://bop.unibe.ch/JEMR/article/view/2429}, DOI={10.16910/jemr.9.1.1}, abstractNote={Syntax highlighting or syntax colouring, plays a vital role in programming development environments by colour-coding various code elements differently. The supposition is that this syntax highlighting assists programmers when reading and analysing code. However, academic text books are largely only available in black-and-white which could influence the comprehension of novice and beginner programmers. This study investigated whether student programmers experience more difficulty in reading and comprehending source code when it is presented without syntax highlighting. Number of fixations, fixation durations and regressions were all higher for black-and-white code than for colour code but not significantly so. Subjectively students indicated that the colour code snippets were easier to read and more aesthetically pleasing. Based on the analysis it could be concluded that students do not experience significantly more difficulty when reading code in black-and-white as printed in text books.}, number={1}, journal={Journal of Eye Movement Research}, author={Beelders, Tanya R. and du Plessis, Jean-Pierre L.}, year={2015}, month={Dec.} }
@book{antlr,
	title={The Definitive ANTLR 4 Reference},
	author={Parr, T.},
	isbn={9781680505009},
	url={https://books.google.pl/books?id=gA9QDwAAQBAJ},
	year={2013},
	publisher={Pragmatic Bookshelf}
}

@INPROCEEDINGS{teavm,  author={Y. {Asano} and K. {Kagawa}},  booktitle={2019 18th International Conference on Information Technology Based Higher Education and Training (ITHET)},   title={Development of a Web-based Support System for Object Oriented Programming Exercises with Graphics Programming},   year={2019},  volume={},  number={},  pages={1-4},  doi={10.1109/ITHET46829.2019.8937351}}
@article{webassembly_speed2,
	author = {Rossberg, Andreas and Titzer, Ben L. and Haas, Andreas and Schuff, Derek L. and Gohman, Dan and Wagner, Luke and Zakai, Alon and Bastien, J. F. and Holman, Michael},
	title = {Bringing the Web up to Speed with WebAssembly},
	year = {2018},
	issue_date = {December 2018},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	volume = {61},
	number = {12},
	issn = {0001-0782},
	url = {https://doi.org/10.1145/3282510},
	doi = {10.1145/3282510},
	journal = {Commun. ACM},
	month = nov,
	pages = {107–115},
	numpages = {9}
}
@inproceedings {webassembly_speed,
	author = {Abhinav Jangda and Bobby Powers and Emery D. Berger and Arjun Guha},
	title = {Not So Fast: Analyzing the Performance of WebAssembly vs. Native Code},
	booktitle = {2019 {USENIX} Annual Technical Conference ({USENIX} {ATC} 19)},
	year = {2019},
	isbn = {978-1-939133-03-8},
	address = {Renton, WA},
	pages = {107--120},
	url = {https://www.usenix.org/conference/atc19/presentation/jangda},
	publisher = {{USENIX} Association},
	month = jul,
}
@article{webassembly,
	author = {Haas, Andreas and Rossberg, Andreas and Schuff, Derek L. and Titzer, Ben L. and Holman, Michael and Gohman, Dan and Wagner, Luke and Zakai, Alon and Bastien, JF},
	title = {Bringing the Web up to Speed with WebAssembly},
	year = {2017},
	issue_date = {June 2017},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	volume = {52},
	number = {6},
	issn = {0362-1340},
	url = {https://doi.org/10.1145/3140587.3062363},
	doi = {10.1145/3140587.3062363},
	abstract = { The maturation of the Web platform has given rise to sophisticated and demanding Web applications such as interactive 3D visualization, audio and video software, and games. With that, efficiency and security of code on the Web has become more important than ever. Yet JavaScript as the only built-in language of the Web is not well-equipped to meet these requirements, especially as a compilation target.  Engineers from the four major browser vendors have risen to the challenge and collaboratively designed a portable low-level bytecode called WebAssembly. It offers compact representation, efficient validation and compilation, and safe low to no-overhead execution. Rather than committing to a specific programming model, WebAssembly is an abstraction over modern hardware, making it language-, hardware-, and platform-independent, with use cases beyond just the Web. WebAssembly has been designed with a formal semantics from the start. We describe the motivation, design and formal semantics of WebAssembly and provide some preliminary experience with implementations. },
	journal = {SIGPLAN Not.},
	month = jun,
	pages = {185–200},
	numpages = {16},
	keywords = {virtual machines, programming languages, assembly languages, type systems, just-in-time compilers}
}


@book{graphTheory,
	title={Graph Theory},
	author={Benny Sudakov},
	year={2019}
}
@book{descriptiveComplexity,
  title={Descriptive Complexity},
  author={Neil Immerman},
  publisher="Graduate Texts in Computer Science"
}
@book{equationSystemsComputing,
  title={Computing in Systems Described by Equations},
  author={Michael J. O'Donnell},
  howpublished = "\url{http://aiweb.techfak.uni-bielefeld.de/content/bworld-robot-control-software/}",
  publisher="vol. 58 of LNCS. Springer"
}
@article{chuchRosserFormalLanguages,
	title={Church-Rosser Thue systems and formal languages},
	author={R. McNaughton, P. Narendran, F. Otto},
	year={1988},
}
@article{mealy,
	title={A Method for Synthesizing Sequential Circuits},
	journal={Bell System Technical Journal. pp. 1045–1079}
	author={Mealy, George H.},
	 year={1955},
}
@article{register_automata_learning,
	title={Learning register automata: from languages to program structures.},
	journal={Mach Learn}
	author={Isberner, M., Howar, F. & Steffen, B.},
	year={2014},
}
@article{neuralSynthesis,
  title={CounterExample Guided Neural Synthesis},
  author={Elizabeth Polgreen, Ralph Abboud, and Daniel Kroening},

}
@article{neuroSymbolicSynthesis,
	title={Neuro-symbolic program synthesis},
	author={Emilio Parisotto, Abdel-rahman Mohamed,Rishabh Singh,Lihong Li,Dengyong Zhou,Pushmeet Kohl},
}
@article{neuroDeductiveSearch,
	title={Neural-Guided Deductive Search for Real-Time Program Synthesis from Examples},
	author={Ashwin Kalyan, Abhishek Mohta, Alex Polozov, Dhruv Batra, Prateek Jain, Sumit Gulwani},
}
@article{neuroDeductiveSearch,
	title={Neural Programming},
	author={Rishabh Singh, Pushmeet Kohli},
}
@article{learnFuzz,
	title={Learn Fuzz: Machine Learning for Input Fuzzing},
	author={Patrice Godefroid, Hila Peleg, Rishabh Singh},
}
@article{compositionalGeneration,
	title={Compositional Generalization via Neural-Symbolic Stack Machines},
	author={Xinyun Chen, Chen Liang, Adams Wei Yu, Dawn Song, Denny Zhou},
}
@article{synthExecDebug,
	title={Synthesize, Execute and Debug: Learning to Repair for Neural Program Synthesis},
	author={Kavi Gupta, Peter Ebert Christensen, Xinyun Chen, Dawn Song},
}
@article{superoptimisation,
	title={Deep Symbolic Superoptimization Without Human Knowledge},
	author={Hui Shi
	, Yang Zhang, Xinyun Chen, Yuandong Tian, Jishen Zhao},
}
@article{egbTermRewriting,
  title={Extending EBG to term-rewriting systems},
  author={Philip Laird,Evan Gamble},
  year={1990},
}
@article{inferFunctionalTransducers,
  title={Nondeterministic functional transducer inference algorithm},
  author={Aleksander Mendoza-Drosik},
  year={2020},
}
@article{inferRewriteSystems,
  title={LARS: A learning algorithm for rewriting systems},
  author={Rémi Eyraud,Colin de la Higuera,Jean-Christophe Janodet},
  year={2007},
}
@article{inferTuringMachine,
  title={On the inference of Turing machines from sample computations},
  author={A. W. Biermann},
  journal={Art. Int.},
  year={1972},
}
@article{brzozowski_co_algebraically,
	title={Brzozowski’s Algorithm (Co)Algebraically},
	author={Bonchi F., Bonsangue M.M., Rutten J.J.M.M., Silva A},
	journal={Lecture Notes in Computer Science},
	year={2012},
}
@article{symbolic_transducers,
	title={The power of symbolic automata and
	transducers},
	author={Loris D’Antoni and Margus Veanes},
	journal={University of Wisconsin, Madison},
}
@article{semideterministic,
  title={A Canonical Semi-Deterministic Transducer},
  author={Achilles Beros, Colin de la Higuera},
}
@article{word_equations,
  author={Day J.D., Ganesh V., He P., Manea F., Nowotka D.},
  year={2018},
  title={The Satisfiability of Word Equations: Decidable and Undecidable Theories.},
  journal={Lecture Notes in Computer Science, vol 11123. Springer, Cham.} 
}
@article{MendozaDrosik2020MultitapeAA,
  title={Multitape automata and finite state transducers with lexicographic weights},
  author={Aleksander Mendoza-Drosik},
  journal={ArXiv},
  year={2020},
  volume={abs/2007.12940}
}
@article{valiant,
author = {Valiant, L. G.},
title = {A Theory of the Learnable},
year = {1984},
issue_date = {Nov. 1984},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {27},
number = {11},
issn = {0001-0782},
url = {https://doi.org/10.1145/1968.1972},
doi = {10.1145/1968.1972},
journal = {Commun. ACM},
month = nov,
pages = {1134–1142},
numpages = {9},
keywords = {inductive inference, probabilistic models of learning, propositional expressions}
}


@article{GOLD1967447,
title = "Language identification in the limit",
journal = "Information and Control",
volume = "10",
number = "5",
pages = "447 - 474",
year = "1967",
issn = "0019-9958",
doi = "https://doi.org/10.1016/S0019-9958(67)91165-5",
url = "http://www.sciencedirect.com/science/article/pii/S0019995867911655",
author = "E Mark Gold",
abstract = "Language learnability has been investigated. This refers to the following situation: A class of possible languages is specified, together with a method of presenting information to the learner about an unknown language, which is to be chosen from the class. The question is now asked, “Is the information sufficient to determine which of the possible languages is the unknown language?” Many definitions of learnability are possible, but only the following is considered here: Time is quantized and has a finite starting time. At each time the learner receives a unit of information and is to make a guess as to the identity of the unknown language on the basis of the information received so far. This process continues forever. The class of languages will be considered learnable with respect to the specified method of information presentation if there is an algorithm that the learner can use to make his guesses, the algorithm having the following property: Given any language of the class, there is some finite time after which the guesses will all be the same and they will be correct. In this preliminary investigation, a language is taken to be a set of strings on some finite alphabet. The alphabet is the same for all languages of the class. Several variations of each of the following two basic methods of information presentation are investigated: A text for a language generates the strings of the language in any order such that every string of the language occurs at least once. An informant for a language tells whether a string is in the language, and chooses the strings in some order such that every string occurs at least once. It was found that the class of context-sensitive languages is learnable from an informant, but that not even the class of regular languages is learnable from a text."
}
@book{lambda, publisher={Texts in Computing}, title={An Introduction to Lambda Calculi for Computer Scientists},  author={C. Hankin}}
@book{sipser, title={Introduction to the Theory of Computation 3rd Edition},  author={Michael Sipser}}
@book{cutland_1980, place={Cambridge}, title={Computability: An Introduction to Recursive Function Theory}, DOI={10.1017/CBO9781139171496}, publisher={Cambridge University Press}, author={Cutland, Nigel}, year={1980}}
@incollection{BRADFIELD2007721,
title = "12 Modal mu-calculi",
editor = "Patrick Blackburn and Johan {Van Benthem} and Frank Wolter",
series = "Studies in Logic and Practical Reasoning",
publisher = "Elsevier",
volume = "3",
pages = "721 - 756",
year = "2007",
booktitle = "Handbook of Modal Logic",
issn = "1570-2464",
doi = "https://doi.org/10.1016/S1570-2464(07)80015-2",
url = "http://www.sciencedirect.com/science/article/pii/S1570246407800152",
author = "Julian Bradfield and Colin Stirling",
abstract = "Publisher Summary
Modal mu-calculus is a logic used extensively in certain areas of computer science and is of considerable intrinsic mathematical and logical interest. Its defining feature is the addition of inductive definitions to modal logic; thereby it achieves a great increase in expressive power and an equally great increase in difficulty of understanding. It includes many of the logics used in systems verification, and is quite straightforward to evaluate. It also provides one of the strongest examples of the connections between modal and temporal logics, automata theory, and the theory of games. It provides second-order expressive power sufficient to generalize the most common temporal logics, but is still decidable and has the finite model property. It raises many intriguing issues about the interface between modal logic, complexity theory, and automata theory. This chapter surveys a range of the questions and results about the modal mu-calculus and related logics. The logic is defined, some approaches to gaining an intuitive understanding of formulae are described, and the main theorem about the semantics is established. The modal mu-calculus has the tree model property and relates to some other temporal logics, to automata and to games."
}
@article{activeLearningNondetFST,
  title={Active Learning of Nondeterministic Finite State Machines},
  author={Warawoot Pacharoen,Toshiaki Aoki,Pattarasinee Bhattarakosol,Athasit Surarerks},
  journal={Mathematical Problems in Engineering},
  year={2013}
}
@InProceedings{Gandhi,
author="Gandhi, Aniruddh
and Khoussainov, Bakhadyr
and Liu, Jiamou",
editor="Agrawal, Manindra
and Cooper, S. Barry
and Li, Angsheng",
title="Finite Automata over Structures",
booktitle="Theory and Applications of Models of Computation",
year="2012",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="373--384",
abstract="We introduce a finite automata model for performing computations over an arbitrary structure {\$}{\backslash}mathcal S{\$}. The automaton processes sequences of elements in {\$}{\backslash}mathcal S{\$}. While processing the sequence, the automaton tests atomic relations, performs atomic operations of the structure {\$}{\backslash}mathcal S{\$}, and makes state transitions. In this setting, we study several problems such as closure properties, validation problem and emptiness problems. We investigate the dependence of deciding these problems on the underlying structures and the number of registers of our model of automata. Our investigation demonstrates that some of these properties are related to the existential first order fragments of the underlying structures.",
isbn="978-3-642-29952-0"
}


@ARTICLE {MARA,
    author  = "Mara Chibnik",
    title   = "Algorithmic elimination of spurious nondeterminism from Mealy machines",
    journal = "Hunter College, CUNY",
    year    = "1986"
}
@inbook{oracleSynthesis,
author = {Jha, Susmit and Gulwani, Sumit and Seshia, Sanjit A. and Tiwari, Ashish},
title = {Oracle-Guided Component-Based Program Synthesis},
year = {2010},
isbn = {9781605587196},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1806799.1806833},
abstract = {We present a novel approach to automatic synthesis of loop-free programs. The approach is based on a combination of oracle-guided learning from examples, and constraint-based synthesis from components using satisfiability modulo theories (SMT) solvers. Our approach is suitable for many applications, including as an aid to program understanding tasks such as deobfuscating malware. We demonstrate the efficiency and effectiveness of our approach by synthesizing bit-manipulating programs and by deobfuscating programs.},
booktitle = {Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering - Volume 1},
pages = {215–224},
numpages = {10}
}
@book{gulwani2017program,
  title={Program Synthesis},
  author={Gulwani, S. and Polozov, O. and Singh, R.},
  isbn={9781680832921},
  series={Foundations and Trends(r) in Programming Languages Series},
  url={https://books.google.pl/books?id=mK5ctAEACAAJ},
  year={2017},
  publisher={Now Publishers}
}



@BOOK {GLUSHKOV,
    author    = "V. M. Glushkov",
    title     = "The abstract theory of automata",
    publisher = "Russian Mathematics Surveys",
    year      = "1961"
}
@BOOK {termRewritingSystems,
    author    = "Terese",
    title     = "Term Rewriting Systems",
    publisher = "Cambridge Tracts in Theoretical Computer Science, Series Number 55",
    year      = "2003"
}
@ARTICLE {KAMEDA,
    author  = "Tsunehiko Kameda, Peter Weiner",
    title   = "On the State Minimization of Nondeterministic Finite Automata",
    journal = "IEEE Transactions on Computers",
    year    = "1970"
}
@ARTICLE {MEALY,
    author  = "Mealy, George H",
    title   = "A Method for Synthesizing Sequential Circuits",
    journal = "Bell System Technical Journal",
    year    = "1955"
}
@ARTICLE {MOORE,
    author  = "Moore, Edward F",
    title   = "Gedanken-experiments on Sequential Machines",
    journal = "Princeton University ",
    year    = "1956"
}
@misc{aleks2020nondeterministic,
    title={Nondeterministic functional transducer inference algorithm},
    author={Aleksander Mendoza-Drosik},
    year={2020},
    eprint={2011.05710},
    archivePrefix={arXiv},
    primaryClass={cs.FL}
}
@misc{aleks2020glushkovs,
    title={Glushkov's construction for functional subsequential transducers},
    author={Aleksander Mendoza-Drosik},
    year={2020},
    eprint={2008.02239},
    archivePrefix={arXiv},
    primaryClass={cs.FL}
}
@BOOK {ARORA,
    author    = "Sanjeev Arora and Boaz Barak",
    title     = "Computational Complexity: A Modern Approach",
    publisher = "Princeton University",
    year      = "2007"
}
@BOOK {DIEKERT,
    author    = "V Diekert",
    title     = "The Book Of Traces",
    publisher = "Wspc",
    year      = "1995"
}
@BOOK {MOHRI2,
    author    = "Mehryar Mohri",
    title     = "Weighted Finite-State Transducer Algorithms. An Overview",
    publisher = "Springer",
    year      = "2004"
}
@BOOK {SALOMAA,
    author    = "Arto Salomaa, Matti Soittola",
    title     = "Automata-Theoretic Aspects of Formal Power Series",
    publisher = "Springer-Verlag New York",
    isbn = {978-1-4612-6264-0},
    doi = {10.1007/978-1-4612-6264-0}
}
@book{DROSTE,
author = {Droste, Manfred and Kuich, Werner and Vogler, Heiko},
year = {2009},
month = {01},
pages = {},
title = {Handbook of Weighted Automata},
isbn = {3642014917, 9783642014918},
doi = {10.1007/978-3-642-01492-5}
}
@book{TRANSDUCERS,
author = {Stoyan Mihov, Klaus U. Schulz},
year = {2019},
pages = {},
title = {Finite-State Techniques: Automata, Transducers and Bimachines},
}

@inproceedings{MEER,
author = {Meer, Klaus and Naif, Ameen},
year = {2014},
month = {04},
pages = {},
title = {Generalized Finite Automata over Real and Complex Numbers},
volume = {591},
journal = {Theoretical Computer Science},
doi = {10.1007/978-3-319-06089-7_12}
}
@ARTICLE{RPNI,
author = {Jose Oncina,Pedro García},
title = {Inferring regular languages in polynomial update time},
year = { 1992},
}
@ARTICLE{OSTIA,
author = {Jose Oncina,Pedro García,Enrique Vidal},
title = {Learning Subsequential Transducers for Pattern Recognition Interpretation Tasks},
journal = {IEEE Transactions on Pattern Analysis and Machine Intelligence},
year = {1993},
}
@ARTICLE{DROSTE2,
author = {Manfred Droste and Dietrich Kuske},
title = {Weighted automata},
journal = {Institut fur Informatik, Universitat Leipzig},
year = {2010},
}
@ARTICLE {MOHRI,
    author  = "Mehryar Mohri, Fernando Pereira and Michael Riley",
    title   = "Weighted Finite-State Transducers in Speech Recognition",
    journal = "AT\&T Labs – Research",
    year    = "2008"
}
@ARTICLE {MOHRI3,
    author  = "Mehryar Mohri",
    title   = "Weighted Finite-State Transducer Algorithms An Overview",
    journal = "AT\&T Labs",
    year    = "2004"
}
@ARTICLE {SOLOMONOFF,
    author  = "R.J.Solomonoff",
    title   = "A formal theory of inductive inference. Part I",
    journal = "Information and Control",
    year    = "1964"
}
@BOOK { KOLMOGOROV,
    author    = "A. Shen, V. A. Uspensky, N. Vereshchagin",
    title     = "Kolmogorov Complexity and Algorithmic Randomness",
    publisher = "IRIF",
    year      = "2019"
}
@book{de_la_higuera, 
place={Cambridge}, 
title={Grammatical Inference: Learning Automata and Grammars}, 
DOI={10.1017/CBO9781139194655}, 
publisher={Cambridge University Press}, 
author={de la Higuera, Colin}, 
year={2010}
}

@ARTICLE{freeLunchTheorem,
  author={D. H. {Wolpert} and W. G. {Macready}},
  journal={IEEE Transactions on Evolutionary Computation}, 
  title={No free lunch theorems for optimization}, 
  year={1997},
  volume={1},
  number={1},
  pages={67-82},
  doi={10.1109/4235.585893}
 }

@ARTICLE {SOLOMONOFF2,
    author  = "R.J.Solomonoff",
    title   = "A formal theory of inductive inference. Part II",
    journal = "Information and Control",
    year    = "1964"
}
@ARTICLE {HANSAN,
    author  = "Hasan Ibne Akram, Colin de la Higuera, Claudia Eckert",
    title   = "Actively Learning Probabilistic Subsequential Transducers",
    journal = "JMLR: Workshop and Conference Proceedings",
    year    = "2012"
}
@BOOK {PIN,
    author    = "Jean-E'ric Pin",
    title     = "Mathematical Foundations of Automata Theory",
    publisher = "American Mathematical Society",
    year      = "2017"
}
@article{KAMEDA,
author = {Kameda, Tiko and Weiner, Peter},
year = {1970},
month = {08},
pages = {617 - 627},
title = {On the State Minimization of Nondeterministic Finite Automata},
volume = {100},
journal = {Computers, IEEE Transactions on},
doi = {10.1109/T-C.1970.222994}
}

@BOOK {BERSTEL,
    author    = "Jean Berstel",
    title     = "Transductions and Context-Free Languages",
    publisher = "Teubner Studienbucher: Stuttgart",
    year      = "1979"
}
@BOOK {EILENBERG,
    author    = "Samuel Eilenberg",
    title     = "Automata, Languages and Machines Vol. A",
    publisher = "Academic Press",
    year      = "1974"
}
@BOOK {EILENBERG2,
    author    = "Samuel Eilenberg",
    title     = "Automata, Languages and Machines Vol. B",
    publisher = "Academic Press",
    year      = "1976"
}
